/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alexprom.tsp_account.vis;

import com.alexprom.connection.settings.dbConnectionSettingsPanel;
import com.alexprom.tsp_account.daq.CustomRenderer;
import com.alexprom.tsp_account.daq.CounterData;
import com.alexprom.tsp_account.daq.DAQ_Thread;
import com.alexprom.tsp_account.daq.DataLoggerTopComponent;
import com.alexprom.tsp_account.daq.TagManagementPanel;
import com.alexprom.tsp_account.daq.sensorSettingsPanel;
import com.alexprom.tsp_account.report_db.CountersInitData;
import com.alexprom.tsp_account.report_db.GlobalEntityManager;
import com.alexprom.tsp_account.report_db.TSPReport;
import java.awt.Font;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.table.TableColumn;
import org.jfree.chart.JFreeChart;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import org.openide.util.NbPreferences;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;

/**
 *
 * @author yura_
 */

@TopComponent.Description(
        preferredID = "counterVisDataTopComponent",
        iconBase = "com/alexprom/tsp_account/vis/counter_ico.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(
        mode = "editor",
        openAtStartup = false)
/*@ActionID(
        category = "Window",
        id = "com.alexprom.tsp_account.vis.tankVisDataTopComponent")
@ActionReference(
        path = "Menu/Window")
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_tankVisDataAction")*/
@NbBundle.Messages({
    "CTL_counterVisDataAction=counterVisData"
})

public class counterVisData extends TopComponent implements Runnable {
   
    private CountersInitData counterInitData;
    
    private EntityManager em;
    private DAQ_Thread daqThread;
    private CounterData[] data;
    private int dataIndex;
    private Thread formThread;   
    private JFreeChart chart;
    DataLoggerTopComponent tc; 
    /**
     * Creates new form counterVisData
     */
    public counterVisData() {
        initComponents();
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.FALSE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_SLIDING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);
        this.setFont(new Font("Tahoma", 1, 11));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbCurrentMass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbCurrentVolume = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lbCurrentDensity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbCurrentTemperature = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurrentDay = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLastWeek = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 16, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        lbCurrentMass.setEditable(false);
        lbCurrentMass.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCurrentMass.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lbCurrentMass.setText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentMass.text")); // NOI18N
        lbCurrentMass.setToolTipText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentMass.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 27, 0, 0);
        jPanel1.add(lbCurrentMass, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        lbCurrentVolume.setEditable(false);
        lbCurrentVolume.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCurrentVolume.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lbCurrentVolume.setText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentVolume.text")); // NOI18N
        lbCurrentVolume.setToolTipText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentVolume.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 27, 0, 0);
        jPanel1.add(lbCurrentVolume, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        lbCurrentDensity.setEditable(false);
        lbCurrentDensity.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCurrentDensity.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lbCurrentDensity.setText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentDensity.text")); // NOI18N
        lbCurrentDensity.setToolTipText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentDensity.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 27, 0, 0);
        jPanel1.add(lbCurrentDensity, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 16, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        lbCurrentTemperature.setEditable(false);
        lbCurrentTemperature.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbCurrentTemperature.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lbCurrentTemperature.setText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentTemperature.text")); // NOI18N
        lbCurrentTemperature.setToolTipText(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.lbCurrentTemperature.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 27, 17, 0);
        jPanel1.add(lbCurrentTemperature, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jPanel2.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tblCurrentDay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Время", "Масса, кг", "Объем, л", "t, °C", "p, кг/л"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCurrentDay.setEnabled(false);
        tblCurrentDay.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCurrentDay);
        if (tblCurrentDay.getColumnModel().getColumnCount() > 0) {
            tblCurrentDay.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblCurrentDay.columnModel.title0")); // NOI18N
            tblCurrentDay.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblCurrentDay.columnModel.title1")); // NOI18N
            tblCurrentDay.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblCurrentDay.columnModel.title2")); // NOI18N
            tblCurrentDay.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblCurrentDay.columnModel.title3")); // NOI18N
            tblCurrentDay.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblCurrentDay.columnModel.title4")); // NOI18N
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jPanel4.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        tblLastWeek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Дата:", "Время", "Масса, кг", "Объем, л", "t, °C", "p, кг/л"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLastWeek.setEnabled(false);
        tblLastWeek.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblLastWeek);
        if (tblLastWeek.getColumnModel().getColumnCount() > 0) {
            tblLastWeek.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title0")); // NOI18N
            tblLastWeek.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title1")); // NOI18N
            tblLastWeek.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title2")); // NOI18N
            tblLastWeek.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title3")); // NOI18N
            tblLastWeek.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title4")); // NOI18N
            tblLastWeek.getColumnModel().getColumn(5).setHeaderValue(org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.tblLastWeek.columnModel.title5")); // NOI18N
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), org.openide.util.NbBundle.getMessage(counterVisData.class, "counterVisData.jPanel3.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(192, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lbCurrentDensity;
    private javax.swing.JTextField lbCurrentMass;
    private javax.swing.JTextField lbCurrentTemperature;
    private javax.swing.JTextField lbCurrentVolume;
    private javax.swing.JTable tblCurrentDay;
    private javax.swing.JTable tblLastWeek;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        Preferences pref = NbPreferences.forModule(dbConnectionSettingsPanel.class);
        pref.addPreferenceChangeListener(new PreferenceChangeListener() {
        @Override
        public void preferenceChange(PreferenceChangeEvent evt) {                        
            updatePersistence();
            getTask();
        }
        });        
        
        Preferences tagsMgmt = NbPreferences.forModule(TagManagementPanel.class);
        tagsMgmt.addPreferenceChangeListener(new PreferenceChangeListener(){
            @Override
            public void preferenceChange(PreferenceChangeEvent evt) {
                getTask();
            }                
        });
        Preferences tankPref = NbPreferences.forModule(sensorSettingsPanel.class);
        tankPref.addPreferenceChangeListener(new PreferenceChangeListener() {
            @Override
            public void preferenceChange(PreferenceChangeEvent evt) {
                close();
            }
        });
        
        updatePersistence();
        getTask();
        formThread = new Thread(this);
        formThread.setPriority(Thread.MIN_PRIORITY);
        formThread.start();
    }
    
    public void updatePersistence(){                        
        GlobalEntityManager gem = new GlobalEntityManager();        
        em = gem.getEm();        
    }
    
    @Override
    public void componentClosed() {
        
    }
    
    public void setCounterDataObject(CountersInitData counter){
        counterInitData = counter;
    }

    private CountersInitData getCounterDataObject(){
        return counterInitData;
    }
    
    private void getTask(){
        tc = (DataLoggerTopComponent)WindowManager.getDefault().findTopComponent("DataLoggerTopComponent");
        data = tc.getCounterData();
        dataIndex=-1;
        for (int i=0; i<data.length; i++){            
            if (data[i].getCounterId()==counterInitData.getCounterId()) dataIndex=i;
            }
        if (dataIndex==-1) close();
    }
    
    private void updateVis(){
        data = tc.getCounterData();
        lbCurrentMass.setText(String.format("%.1f", data[dataIndex].getCounterMass()));
        lbCurrentVolume.setText(String.format("%.1f", data[dataIndex].getCounterVolume()));
        lbCurrentDensity.setText(String.format("%.4f", data[dataIndex].getCounterDensity()));
        lbCurrentTemperature.setText(String.format("%.1f", data[dataIndex].getCounterTemperature()));
        
        Date currentDate = new Date();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Query query = em.createNamedQuery("TSPReport.findByDateTankID");
        query.setParameter("tankID", data[dataIndex].getCounterId());
        query.setParameter("daqDate", df.format(currentDate));
        List<TSPReport> currentDay = query.getResultList();
        int cnt = currentDay.size();
        try{
        if (cnt!=0){            
            for (int i=0; i<cnt; i++){
                tblCurrentDay.getModel().setValueAt(currentDay.get(i).getDaqTime(), i, 0);
                tblCurrentDay.getModel().setValueAt(currentDay.get(i).getTLevel(), i, 1);
                tblCurrentDay.getModel().setValueAt(currentDay.get(i).getTVolume(), i, 2);
                tblCurrentDay.getModel().setValueAt(currentDay.get(i).getTTemper(), i, 3);
                tblCurrentDay.getModel().setValueAt(currentDay.get(i).getTDensity(), i, 4);
            }
            int c = tblCurrentDay.getColumnCount();
            for (int i=0; i<c; i++){
                TableColumn col = tblCurrentDay.getColumnModel().getColumn(i);                            
                col.setCellRenderer(new CustomRenderer());
            }
        }
        query = em.createNamedQuery("TSPReport.findByTankID");
        query.setParameter("tankID", data[dataIndex].getCounterId());
        List<TSPReport> lastWeek = query.getResultList();
        int cntWeek = lastWeek.size();
        if (cntWeek!=0){
            if (cntWeek>=14){
                for (int j=cntWeek-14; j<cntWeek; j++){
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getDaqDate(), j-cntWeek+14, 0);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getDaqTime(), j-cntWeek+14, 1);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTLevel(), j-cntWeek+14, 2);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTVolume(), j-cntWeek+14, 3);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTTemper(), j-cntWeek+14, 4);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTDensity(), j-cntWeek+14, 5);
                }
            }else{
                for (int j=0; j<cntWeek; j++){
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getDaqDate(), j, 0);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getDaqTime(), j, 1);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTLevel(), j, 2);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTVolume(), j, 3);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTTemper(), j, 4);
                    tblLastWeek.getModel().setValueAt(lastWeek.get(j).getTDensity(), j, 5);
                }
            }
            int c = tblLastWeek.getColumnCount();
            for (int i=0; i<c; i++){
                TableColumn col = tblLastWeek.getColumnModel().getColumn(i);                            
                col.setCellRenderer(new CustomRenderer());
            }
        }
        }catch (java.lang.ArrayIndexOutOfBoundsException ex){
            
        }
    }
    
    @Override
    public void run() {
        while (true){
            updateVis();
            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

}
